[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[packages]
fastapi = "~=0.92.0"
uvicorn = "~=0.17.6"
pydantic = "~=1.10.0"
requests = "*"
openpyxl = "~=3.0.10"
dict2xml = "~=1.7.1"
GitPython = "~=3.1.27"
Deprecated = "~=1.2.13"
hypothesis = "~=6.54.4"
python-jose = "~=3.3.0"
python-dateutil="~=2.8.2"
neomodel="~=5.1.0"
yattag = "~=1.14.0"
python-docx = "~=1.1.2"
colour = "~=0.1.5"
authlib = "~=1.1.0"
httpx = "~=0.23.0"
starlette-context = "==0.3.4"
python-multipart = "~=0.0.5"
beautifulsoup4 = "~=4.11.1"
lxml = "~=4.9.1"
opencensus = "~=0.11.0"
opencensus-ext-azure = "~=1.1.7"
pyyaml = "~=6.0"
xsdata = "==22.9"
weasyprint = "~=57.1"
deepdiff = "~=7.0.1"
asyncache = "~=0.3.1"
cachetools = "~=5.3.1"
usdm = "==0.51.0"

[dev-packages]
pytest = "~=7.1.2"
pytest-bdd = "~=7.0.0"
pytest-cov = "~=3.0.0"
pylint = "~=2.17.0"
flake8 = "~=5.0.4"
pep8 = "~=1.7.1"
autopep8 = "~=1.7.0"
mypy = "~=0.971"
pbr = "~=5.10.0"
rope = "~=1.3.0"
isort = "~=5.11.5"
black = "~=23.3.0"
pytest-asyncio = "~=0.19.0"
pytest-forked = "~=1.4.0"
pytest-xdist = "~=2.5.0"
parameterized = "~=0.8.1"
schemathesis = "~=3.17.5"

[requires]
python_version = "3.11"

[scripts]
dev = "uvicorn --host=0.0.0.0 --port=8000 clinical_mdr_api.main:app --reload"
prod = "uvicorn --host=0.0.0.0 --port=8000 --limit-concurrency=120 --workers=4 --loop=asyncio clinical_mdr_api.main:app"
test = "pytest -s"
dist = "python setup.py bdist_wheel"
package = "pip wheel -r requirements.txt -w dist"
testunit = "pytest -s --cov-report html:reports/coverage-unit-html --cov-report xml:reports/coverage.xml --cov-append --cov  --junitxml=reports/unit_report.xml clinical_mdr_api/tests/unit/"
testint = "pytest -s -n 4 --dist loadfile --cov-report html:reports/coverage-int-html --cov-report xml:reports/coverage.xml --cov-append --cov --junitxml=reports/int_report.xml clinical_mdr_api/tests/integration/"
testauth = "pytest -s --cov-report html:reports/coverage-auth-html --cov-report xml:reports/coverage.xml --cov-append --cov --junitxml=reports/auth_report.xml clinical_mdr_api/tests/oauth/"
test-telemetry = "pytest -s --cov-report html:reports/coverage-telemetry-html --cov-report xml:reports/coverage.xml --cov-append --cov --junitxml=reports/telemetry_report.xml clinical_mdr_api/tests/telemetry/"
lint = "pylint clinical_mdr_api consumer_api"
black = "python -m black clinical_mdr_api consumer_api"
isort = "python -m isort clinical_mdr_api consumer_api"
format = """sh -c "
    python -m isort clinical_mdr_api consumer_api \
    && python -m black clinical_mdr_api consumer_api \
"
"""
openapi = "python generate_openapi_json.py"
schemathesis = """
    schemathesis
        --pre-run=clinical_mdr_api.hooks.schemathesis_hooks
        run
        --checks=all
        --base-url=http://localhost:8000
        --request-timeout=30000
        --hypothesis-max-examples=10
        --hypothesis-verbosity=normal
        --hypothesis-deadline=None
        --hypothesis-suppress-health-check=too_slow,filter_too_much,data_too_large
        --junit-xml=reports/schemathesis_report.xml
        --report=reports/schemathesis_report.tgz
        --show-errors-tracebacks
        openapi.json
"""
build-sbom = "pipelines/scripts/build-sbom.sh"
schemathesis-help = "schemathesis run --help"


consumer-api-dev = "uvicorn --host=0.0.0.0 --port=8008 consumer_api.consumer_api:app --reload"
consumer-api-lint = "pylint consumer_api"
consumer-api-test = "pytest -s -n 1 --dist loadfile --cov-report html:consumer_api/reports/coverage-int-html --cov-report xml:consumer_api/reports/coverage.xml --cov-append --cov --junitxml=consumer_api/reports/test_report.xml --ignore=consumer_api/tests/auth consumer_api/tests"
consumer-api-testauth = "pytest -s -n 1 --dist loadfile --cov-report html:consumer_api/reports/coverage-auth-html --cov-report xml:consumer_api/reports/coverage.xml --cov-append --cov --junitxml=consumer_api/reports/auth_report.xml consumer_api/tests/auth"
consumer-openapi = "python generate_openapi.py consumer_api.consumer_api:app consumer_api/openapi.json consumer_api/apiVersion"
consumer-api-schemathesis = """
    schemathesis
        --pre-run=clinical_mdr_api.hooks.schemathesis_hooks
        run
        --checks=all
        --base-url=http://localhost:8008
        --request-timeout=30000
        --hypothesis-max-examples=50
        --hypothesis-verbosity=normal
        --hypothesis-deadline=None
        --hypothesis-suppress-health-check=too_slow,filter_too_much,data_too_large
        --junit-xml=consumer_api/reports/schemathesis_report.xml
        --report=consumer_api/reports/schemathesis_report.tgz
        --show-errors-tracebacks
        consumer_api/openapi.json
"""
