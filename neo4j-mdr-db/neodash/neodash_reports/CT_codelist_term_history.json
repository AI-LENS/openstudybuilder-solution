{
  "title": "Codelist / Terms history",
  "version": "2.4",
  "settings": {
    "pagenumber": 0,
    "editable": true,
    "fullscreenEnabled": false,
    "parameters": {
      "neodash_selected_date": {
        "year": 2018,
        "month": 12,
        "day": 20
      },
      "neodash_ctcodelistattributesvalue_name": "",
      "neodash_ctcodelistattributesvalue_name_display": "",
      "neodash_subval": [],
      "neodash_subval_display": []
    },
    "theme": "light",
    "disableRowLimiting": true
  },
  "pages": [
    {
      "title": "ReadMe",
      "reports": [
        {
          "id": "705f65b8-21d4-47db-a71a-7867c32cb06b",
          "title": "Guide",
          "query": "This NeoDash report allow you to browse the **Controlled Terminology** with both the CDISC and the Sponsor Codelists / Terms: here we display the evolution of each Codelist from Package to Package.\n\n\n",
          "width": 6,
          "height": 4,
          "x": 0,
          "y": 0,
          "type": "text",
          "selection": {},
          "settings": {},
          "schema": []
        }
      ]
    },
    {
      "title": "Codelist and Terms",
      "reports": [
        {
          "id": "1009ff47-1b86-4141-be6d-be5e794bdb83",
          "title": "Overview at date : $neodash_selected_date",
          "query": "MATCH (n1:CTCodelistAttributesValue)<-[r1]-(n2:CTCodelistAttributesRoot)<-[r2]-(n3:CTCodelistRoot)\nMATCH (n5:CTCatalogue)-[r4]->(n3)<-[r3]-(n4:Library)\nMATCH p=(n3)-[r5]->(n6:CTTermRoot)-[r6]->(n7:CTTermAttributesRoot)-[r7:HAS_VERSION]->(n8:CTTermAttributesValue)\nWHERE n1.name=$neodash_ctcodelistattributesvalue_name AND ((date(r7.start_date) <= date($neodash_selected_date) < date(r7.end_date)) OR (r7.end_date IS NULL AND (date(r7.start_date) <= date($neodash_selected_date) )))\nRETURN DISTINCT p\n",
          "width": 12,
          "height": 4,
          "x": 5,
          "y": 0,
          "type": "graph",
          "selection": {
            "CTCodelistRoot": "uid",
            "CTTermRoot": "concept_id",
            "CTTermAttributesRoot": "(no label)",
            "CTTermAttributesValue": "code_submission_value"
          },
          "settings": {
            "layout": "radial",
            "fullscreenEnabled": true
          },
          "schema": [
            [
              "CTCodelistRoot",
              "uid"
            ],
            [
              "CTTermRoot",
              "uid",
              "concept_id"
            ],
            [
              "CTTermAttributesRoot"
            ],
            [
              "CTTermAttributesValue",
              "preferred_term",
              "concept_id",
              "code_submission_value",
              "definition",
              "synonyms"
            ]
          ]
        },
        {
          "id": "dd410e42-aa14-4777-bc30-b0b2a8124758",
          "title": "Pick a date for the graph view",
          "query": "RETURN true;",
          "width": 6,
          "height": 4,
          "x": 17,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "type": "Date Picker",
            "entityType": "selected_date",
            "parameterName": "neodash_selected_date"
          },
          "schema": []
        },
        {
          "id": "e1eaf548-16e4-4f77-a358-9bc7ea61e0b8",
          "title": "History of terms in Codelist",
          "query": "call apoc.when(size($neodash_subval)>0,\"MATCH (n1:CTCodelistAttributesValue)<-[r1:HAS_VERSION]-(n2:CTCodelistAttributesRoot)<-[r2]-(n3:CTCodelistRoot)-[r5]->(n6:CTTermRoot)-[r6]->(n7:CTTermAttributesRoot)-[r7:HAS_VERSION]->(n8:CTTermAttributesValue)\nWITH DISTINCT n1,r1,n2,r2,n3,r5,n6,r6,n7,r7,n8\nWHERE n1.name=$neodash_ctcodelistattributesvalue_name and n8.code_submission_value in $neodash_subval\nwith n8.code_submission_value as term, n8.concept_id as ccode, r7.version as version, properties(n8) as map1,apoc.map.fromValues(['version',r7.version,'start_date',r7.start_date,'retire_date',r5.end_date,'end_date',r7.end_date]) as map2 order by n8.code_submission_value,n8.concept_id, r7.version\nwith term, ccode, CASE WHEN 'synonyms' in keys(map1) THEN apoc.map.setValues(map1,['synonyms',apoc.text.join(map1['synonyms'],';')]) ELSE map1 END as map1, map2\nwith term, ccode, collect(apoc.map.merge(map1, map2)) as terms \n with term, ccode, size(terms) as n, terms\n with term, ccode, CASE WHEN n>1 THEN apoc.coll.pairs(terms)  ELSE [[null,terms[0]]] end as terms\n with term, ccode, CASE when size(terms)>1 THEN  apoc.coll.insert(terms[0..size(terms)-1], 0, [null,terms[0][0]]) ELSe terms END as terms\nWITH term,  ccode, terms, [t in terms | CASE WHEN t[0] is not null and not t[0]['definition']=t[1]['definition'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\" +t[0]['version']+ \\\": \\\" + t[0]['definition'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['definition'] +\\\"</p>\\\" ELSE\n    t[1]['definition'] end] as definition,\n    [t in terms | t[1]['start_date']] as start_date,\n    [t in terms | coalesce(t[1]['end_date'],date())] as end_date,\n    [t in terms | CASE WHEN t[0] is not null and not t[0]['concept_id']=t[1]['concept_id'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\":\\\" + t[0]['concept_id'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\":  \\\" + t[1]['concept_id'] +\\\"</p>\\\" ELSE\n    t[1]['concept_id'] end] as concept_id,\n    [t in terms | CASE WHEN t[0] is not null and not t[0]['retire_date']=t[1]['retire_date'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + apoc.temporal.format(t[0]['retire_date'],'YYYY-MM-dd') + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + apoc.temporal.format(t[1]['retire_date'],'YYYY-MM-dd') +\\\"</p>\\\" ELSE CASE WHEN t[1]['retire_date'] is not null THEN \n    apoc.temporal.format(t[1]['retire_date'],'YYYY-MM-dd') ELSE t[1]['retire_date'] END end] as retire_date,\n        [t in terms | CASE WHEN t[0] is not null and not t[0]['preferred_term']=t[1]['preferred_term'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['preferred_term'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['preferred_term'] +\\\"</p>\\\" ELSE\n    t[1]['preferred_term'] end] as preferred_term,\n        [t in terms | CASE WHEN t[0] is not null and not t[0]['code_submission_value']=t[1]['code_submission_value'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['code_submission_value'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['code_submission_value'] +\\\"</p>\\\" ELSE\n    t[1]['code_submission_value'] end] as code_submission_value,\n\n    [t in terms | CASE WHEN t[0] is not null and 'synonyms' in keys(t[0]) and 'synonyms' in keys(t[1]) and not t[0]['synonyms']=t[1]['synonyms']  \n    THEN  \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['synonyms'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\"+ t[1]['synonyms'] + \\\"</p>\\\" \n    ELSE \n      CASE WHEN t[0] is not null and not 'synonyms' in keys(t[0]) and 'synonyms' in keys(t[1]) THEN  \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": </p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['synonyms'] +\\\"</p>\\\" \n          ELSE \n          CASE WHEN t[0] is not null and not 'synonyms' in keys(t[1]) and 'synonyms' in keys(t[0]) THEN\n     \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['synonyms'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": </p>\\\" ELSE\n    t[1]['synonyms'] end end end] as synonyms,\n\n    [t in terms | t[1]['version'] ] as version\n\nwith term, ccode, concept_id,definition, code_submission_value, preferred_term, synonyms, start_date, end_date, retire_date, version, range(0,size(terms)-1,1) AS coll_size\nunwind coll_size as idx\nwith distinct term, ccode,definition[idx] as definition,\nconcept_id[idx] as concept_id,\ncode_submission_value[idx] as code_submission_value,\npreferred_term[idx] as preferred_term,\nsynonyms[idx] as synonyms, \nstart_date[idx] as start_date, \nend_date[idx] as end_date, \nretire_date[idx] as retire_date, \nversion[idx] as version\nWITH term, ccode, definition,concept_id,code_submission_value,preferred_term, synonyms,start_date, end_date, retire_date,version\nCALL apoc.create.vNode(['Term'],\n  {start_date:apoc.temporal.format(start_date,'YYYY-MM-dd'),\n  end_date:apoc.temporal.format(end_date,'YYYY-MM-dd'),\n  retire_date:retire_date,\n  concept_id: concept_id,\n  code_submission_value:code_submission_value,\n  definition:definition,\n  preferred_term:preferred_term,\n  synonyms:synonyms,\n  version:version }) YIELD node as node\n  WITH term, ccode, collect(node) as nodes\n  WITH term, ccode, CASE WHEN size(nodes)>1 THEN apoc.coll.pairs(nodes) ELSE [nodes,null] END as nodes\n  UNWIND nodes as node_pair\n  with term,ccode,node_pair[0] as prev_node, node_pair[1] as next_node\n  WITH term,ccode,prev_node, next_node,\n  CASE WHEN next_node is not null THEN apoc.create.vRelationship(prev_node, 'NEXT', {}, next_node) END as rel \n  return term,ccode,prev_node as terms , rel\",\n  \"MATCH (n1:CTCodelistAttributesValue)<-[r1:HAS_VERSION]-(n2:CTCodelistAttributesRoot)<-[r2]-(n3:CTCodelistRoot)-[r5]->(n6:CTTermRoot)-[r6]->(n7:CTTermAttributesRoot)-[r7:HAS_VERSION]->(n8:CTTermAttributesValue)\nWITH DISTINCT n1,r1,n2,r2,n3,r5,n6,r6,n7,r7,n8\nWHERE n1.name=$neodash_ctcodelistattributesvalue_name \nwith n8.code_submission_value as term, n8.concept_id as ccode, r7.version as version, properties(n8) as map1,apoc.map.fromValues(['version',r7.version,'start_date',r7.start_date,'retire_date',r5.end_date,'end_date',r7.end_date]) as map2 order by n8.code_submission_value,n8.concept_id, r7.version\n with term, ccode, collect(apoc.map.merge(map1, map2)) as terms \n with term,ccode, size(terms) as n, terms\n with term, ccode, CASE WHEN n>1 THEN apoc.coll.pairs(terms)  ELSE [[null,terms[0]]] end as terms\n with term,ccode,CASE when size(terms)>1 THEN  apoc.coll.insert(terms[0..size(terms)-1], 0, [null,terms[0][0]]) ELSe terms END as terms\nWITH term, ccode, terms, [t in terms | CASE WHEN t[0] is not null and not t[0]['definition']=t[1]['definition'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\" +t[0]['version']+ \\\": \\\" + t[0]['definition'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['definition'] +\\\"</p>\\\" ELSE\n    t[1]['definition'] end] as definition,\n    [t in terms | t[1]['start_date']] as start_date,\n    [t in terms | coalesce(t[1]['end_date'],date())] as end_date,\n    [t in terms | CASE WHEN t[0] is not null and not t[0]['concept_id']=t[1]['concept_id'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\":\\\" + t[0]['concept_id'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\":  \\\" + t[1]['concept_id'] +\\\"</p>\\\" ELSE\n    t[1]['concept_id'] end] as concept_id,\n    [t in terms | CASE WHEN t[0] is not null and not t[0]['retire_date']=t[1]['retire_date'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + apoc.temporal.format(t[0]['retire_date'],'YYYY-MM-dd') + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + apoc.temporal.format(t[1]['retire_date'],'YYYY-MM-dd') +\\\"</p>\\\" ELSE CASE WHEN t[1]['retire_date'] is not null THEN \n    apoc.temporal.format(t[1]['retire_date'],'YYYY-MM-dd') ELSE t[1]['retire_date'] END end] as retire_date,\n        [t in terms | CASE WHEN t[0] is not null and not t[0]['preferred_term']=t[1]['preferred_term'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['preferred_term'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['preferred_term'] +\\\"</p>\\\" ELSE\n    t[1]['preferred_term'] end] as preferred_term,\n        [t in terms | CASE WHEN t[0] is not null and not t[0]['code_submission_value']=t[1]['code_submission_value'] THEN \n    \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['code_submission_value'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['code_submission_value'] +\\\"</p>\\\" ELSE\n    t[1]['code_submission_value'] end] as code_submission_value,\n    [t in terms | CASE WHEN t[0] is not null and 'synonyms' in keys(t[0]) and 'synonyms' in keys(t[1]) and not t[0]['synonyms']=t[1]['synonyms']  \n    THEN  \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['synonyms'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\"+ t[1]['synonyms'] + \\\"</p>\\\" \n    ELSE \n      CASE WHEN t[0] is not null and not 'synonyms' in keys(t[0]) and 'synonyms' in keys(t[1]) THEN  \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": </p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": \\\" + t[1]['synonyms'] +\\\"</p>\\\" \n          ELSE \n          CASE WHEN t[0] is not null and not 'synonyms' in keys(t[1]) and 'synonyms' in keys(t[0]) THEN\n     \\\"<p style=\\'color:green;\\'>V\\\"+t[0]['version']+\\\": \\\" + t[0]['synonyms'] + \\\"</p><p style=\\'color:red;\\'>V\\\"+t[1]['version']+\\\": </p>\\\" ELSE\n    t[1]['synonyms'] end end end] as synonyms,\n\n    [t in terms | t[1]['version'] ] as version\n\nwith term, ccode, concept_id,definition, code_submission_value, preferred_term, synonyms,start_date, end_date, retire_date, version, range(0,size(terms)-1,1) AS coll_size\nunwind coll_size as idx\nwith distinct term, ccode,definition[idx] as definition,\nconcept_id[idx] as concept_id,\ncode_submission_value[idx] as code_submission_value,\npreferred_term[idx] as preferred_term,\nsynonyms[idx] as synonyms, \nstart_date[idx] as start_date, \nend_date[idx] as end_date, \nretire_date[idx] as retire_date, \nversion[idx] as version\nWITH term, ccode, definition,concept_id,code_submission_value,preferred_term, synonyms,start_date, end_date, retire_date,version\nCALL apoc.create.vNode(['Term'],\n  {start_date:apoc.temporal.format(start_date,'YYYY-MM-dd'),\n  end_date:apoc.temporal.format(end_date,'YYYY-MM-dd'),\n  retire_date:retire_date,\n  concept_id: concept_id,\n  code_submission_value:code_submission_value,\n  definition:definition,\n  preferred_term:preferred_term ,\n  synonyms:synonyms,\n  version:version}) YIELD node as node\n  WITH term, ccode, collect(node) as nodes\n  WITH term, ccode, CASE WHEN size(nodes)>1 THEN apoc.coll.pairs(nodes) ELSE [nodes,null] END as nodes\n  UNWIND nodes as node_pair\n  with term, ccode,node_pair[0] as prev_node, node_pair[1] as next_node\n  WITH term, ccode,prev_node, next_node,\n  CASE WHEN next_node is not null THEN apoc.create.vRelationship(prev_node, 'NEXT', {}, next_node) END as rel \n  return term, ccode,prev_node as terms , rel\",{neodash_ctcodelistattributesvalue_name:$neodash_ctcodelistattributesvalue_name,neodash_subval:$neodash_subval}) YIELD value\n  return\n value.term as term, value.terms as terms,value.rel as rel\n ",
          "width": 23,
          "height": 4,
          "x": 0,
          "y": 10,
          "type": "gantt",
          "selection": {
            "Term": "(label)",
            "NEXT": "(label)"
          },
          "settings": {
            "startDateProperty": "start_date",
            "endDateProperty": "end_date",
            "nameProperty": "code_submission_value",
            "viewMode": "Year",
            "orderProperty": "term",
            "fullscreenEnabled": true
          },
          "schema": [
            [
              "Term",
              "end_date",
              "preferred_term",
              "concept_id",
              "synonyms",
              "code_submission_value",
              "definition",
              "retire_date",
              "version",
              "start_date"
            ],
            [
              "NEXT"
            ]
          ]
        },
        {
          "id": "9175edb5-b4f8-4ed7-b325-e62dbeddb8c7",
          "title": "Terms history for codelist - $neodash_ctcodelistattributesvalue_name",
          "query": "MATCH (n1:CTCodelistAttributesValue)<-[r1:HAS_VERSION]-(n2:CTCodelistAttributesRoot)<-[r2]-(n3:CTCodelistRoot)-[r5]->(n6:CTTermRoot)-[r6]->(n7:CTTermAttributesRoot)-[r7:HAS_VERSION]->(n8:CTTermAttributesValue),\n(n6)<-[:CONTAINS_TERM]-(lib_term:Library),\n(n3)<-[:CONTAINS_CODELIST]-(lib_cl:Library) \nWITH DISTINCT n1,r1,n2,r2,n3,r5,n6,r6,n7,r7,n8,lib_term, lib_cl\nWHERE n1.name=$neodash_ctcodelistattributesvalue_name \nWITH DISTINCT n1.name AS CodelistName, \nlib_cl.name as CodelistOwner,\nn3.uid AS Codelist, \nn8.code_submission_value AS SubVal,\nn6.concept_id as `Term C-code`,\nlib_term.name as TermOwner,\ncase when r7.start_date is not null then apoc.temporal.format(r7.start_date,\"YYYY-MM-dd\")  else '' end as start_date,\ncase when r5.end_date is not null then apoc.temporal.format(r5.end_date,\"YYYY-MM-dd\")  else '' end as retire_date\nWITH CodelistName, CodelistOwner, Codelist, SubVal,  TermOwner,`Term C-code`,\nsize(apoc.coll.toSet(collect(start_date)))-1 as numChange, \napoc.coll.sort(apoc.coll.toSet(collect(start_date))) as startDate,\nretire_date\nwith distinct Codelist, \nCodelistName, \nCodelistOwner,\n`Term C-code`,\nSubVal,\nTermOwner,\nnumChange, \nstartDate, \nretire_date order by Codelist, CodelistName, SubVal\nwith Codelist,\nCodelistOwner,\nCodelistName as`Codelist Name`,\n`Term C-code`,\nSubVal as `Submission Value`,\nTermOwner,\nnumChange as `#Changes`,\nstartDate[0] as `Creation Date`,\ncase when size(startDate) >1 then startDate[1..(size(startDate))] else '' end as `Date of Change(s)`,\nretire_date as `Retire Date`,\ncase when not retire_date='' then 'retired' else 'active' end as Status\nreturn\nCodelist,\nCodelistOwner,\n`Codelist Name`,\n`Term C-code`,\n`Submission Value`,\nTermOwner,\n`#Changes`,\n`Creation Date`,\n`Date of Change(s)`,\n`Retire Date`,\nStatus ",
          "width": 23,
          "height": 6,
          "x": 0,
          "y": 4,
          "type": "table",
          "selection": {},
          "settings": {
            "compact": true,
            "wrapContent": true,
            "columnWidths": "[1,1,1,1,1.5,0.8,1,0.8,2,0.8,0.5]",
            "allowDownload": true,
            "refreshButtonEnabled": true,
            "actionsRules": [
              {
                "condition": "rowCheck",
                "field": "Submission Value",
                "value": "Submission Value",
                "customization": "set variable",
                "customizationValue": "subval"
              }
            ]
          }
        },
        {
          "id": "7869fc52-b2a1-4d35-b47c-89b48e964866",
          "title": "Pick a Codelist",
          "query": "MATCH (n:`CTCodelistAttributesValue`) \nWHERE toLower(toString(n.`name`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`name` as value,  n.`name` as display ORDER BY size(toString(value)) ASC LIMIT 20",
          "width": 5,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "entityType": "CTCodelistAttributesValue",
            "propertyType": "name",
            "propertyTypeDisplay": "name",
            "parameterName": "neodash_ctcodelistattributesvalue_name",
            "suggestionLimit": 20
          },
          "schema": []
        },
        {
          "id": "4f6dde88-b8e2-401d-b046-bbf293f3467a",
          "title": "Codelist Concept id",
          "query": "MATCH (n1:CTCodelistAttributesValue)<-[r1:HAS_VERSION]-(n2:CTCodelistAttributesRoot)<-[r2]-(n3:CTCodelistRoot)\nWHERE n1.name=$neodash_ctcodelistattributesvalue_name\nRETURN n3.uid\n",
          "width": 5,
          "height": 2,
          "x": 0,
          "y": 2,
          "type": "value",
          "selection": {},
          "settings": {},
          "schema": []
        },
        {
          "id": "bf3d7781-3d3d-4be6-b6c4-5736a0b5a427",
          "title": "Details for term(s): $neodash_subval",
          "query": "MATCH (n1:CTCodelistAttributesValue)<-[r1:HAS_VERSION]-(n2:CTCodelistAttributesRoot)<-[r2]-(n3:CTCodelistRoot)-[r5]->(n6:CTTermRoot)-[r6]->(n7:CTTermAttributesRoot)-[r7:HAS_VERSION]->(n8:CTTermAttributesValue)\nWITH DISTINCT n1,r1,n2,r2,n3,r5,n6,r6,n7,r7,n8\nWHERE n1.name=$neodash_ctcodelistattributesvalue_name and n8.code_submission_value in $neodash_subval\nwith CASE when n8.concept_id is null THEN toString(id(n8)) ELSE n8.concept_id END as concept_id, apoc.map.merge(properties(n8),apoc.map.fromValues(['version',r7.version,'start_date',r7.start_date,'retire_date',r5.end_date,'end_date',r7.end_date])) as term order by r7.version\nwith concept_id, collect(term) as terms\nwith concept_id,CASE WHEN size(terms)=1 THEN [[null,terms[0]]] ELSE apoc.coll.pairs(terms) END as terms\nwith concept_id, CASE WHEN size(terms)=1  THEN terms ELSE apoc.coll.insert(terms[0..size(terms)-1], 0, [null,terms[0][0]]) END as terms\nwith concept_id,terms, [p in terms | CASE WHEN (p[0]['definition']=p[1]['definition']) or p[0]['definition'] is null \nTHEN 'no' ELSE 'yes' END ] as def_diff,\n[p in terms | CASE WHEN (p[0]['code_submission_value']=p[1]['code_submission_value']) or p[0]['code_submission_value'] is null \nTHEN 'no' ELSE 'yes' END ] as subval_diff,\n[p in terms | CASE WHEN (p[0]['preferred_term']=p[1]['preferred_term']) or p[0]['preferred_term'] is null \nTHEN 'no' ELSE 'yes' END ] as pref_term_diff,\n[p in terms | CASE WHEN (p[0]['concept_id']=p[1]['concept_id']) or p[0]['concept_id'] is null \nTHEN 'no' ELSE 'yes' END ] as concept_diff,\n[p in terms | CASE WHEN (p[0]['synonyms']=p[1]['synonyms']) or p[0]['synonyms'] is null \nTHEN 'no' ELSE 'yes' END ] as sym_diff\nwith concept_id, terms, def_diff, subval_diff, pref_term_diff, concept_diff, sym_diff,range(0,size(terms)-1,1) AS coll_size\nUNWIND coll_size AS idx\nwith concept_id, terms[idx][1]as term, \ndef_diff[idx] as def_diff,\nsubval_diff[idx] as subval_diff, \npref_term_diff[idx] as pref_term_diff, \nconcept_diff[idx] as concept_diff,\nsym_diff[idx] as sym_diff\nWITH concept_id, CASE WHEN \"code_submission_value\" in keys(term) THEN term.code_submission_value ELSE null END as `Submission Value`,\nCASE WHEN 'concept_id' in keys(term) THEN term.concept_id ELSE null END as `C-code`,\nCASE WHEN \"preferred_term\" in keys(term) THEN term.preferred_term ELSE null END as `Preferred Term`,\nCASE WHEN \"synonyms\" in keys(term) THEN term.synonyms ELSE null END as Synonyms,\nCASE WHEN \"definition\" in keys(term) THEN term.definition ELSE null END as Definition,\ncase when term.start_date is not null then apoc.temporal.format(term.start_date,\"YYYY-MM-dd\")  else null end as `Start Date`,\ncase when term.end_date is not null then apoc.temporal.format(term.end_date,\"YYYY-MM-dd\")  else null end as end_date,\ncase when term.retire_date is not null then apoc.temporal.format(term.retire_date,\"YYYY-MM-dd\")  else null end as `Retire Date`,\nterm.version as Version,\ndef_diff,subval_diff,pref_term_diff,concept_diff, sym_diff\nreturn `Submission Value`,\n`C-code`,\n`Preferred Term`,\nSynonyms,\nDefinition,\n`Start Date`,\ncoalesce(end_date,`Retire Date`) as `End Date`,\nVersion,\nsubval_diff as `Submission Value diff`,\nconcept_diff as `C-code diff`,\npref_term_diff as `Preferred Term diff`,\nsym_diff as `Synonyms diff`,\ndef_diff as `Definition diff`\norder by concept_id,`Start Date`, `End Date`\n",
          "width": 23,
          "height": 6,
          "x": 0,
          "y": 14,
          "type": "table",
          "selection": {},
          "settings": {
            "refreshButtonEnabled": true,
            "compact": true,
            "wrapContent": true,
            "columnWidths": "[1,1,1,1,2,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5]",
            "noDataMessage": "Select one or more terms in table above",
            "actionsRules": [
              {
                "condition": "Click",
                "field": "",
                "value": "",
                "customization": "set variable",
                "customizationValue": ""
              }
            ],
            "styleRules": [
              {
                "field": "Submission Value diff",
                "condition": "=",
                "value": "no",
                "customization": "cell text color",
                "customizationValue": "green"
              },
              {
                "field": "Submission Value diff",
                "condition": "=",
                "value": "yes",
                "customization": "cell text color",
                "customizationValue": "red"
              },
              {
                "field": "C-code diff",
                "condition": "=",
                "value": "no",
                "customization": "cell text color",
                "customizationValue": "green"
              },
              {
                "field": "C-code diff",
                "condition": "=",
                "value": "yed",
                "customization": "cell text color",
                "customizationValue": "red"
              },
              {
                "field": "Preferred Term diff",
                "condition": "=",
                "value": "no",
                "customization": "cell text color",
                "customizationValue": "green"
              },
              {
                "field": "Preferred Term diff",
                "condition": "=",
                "value": "yes",
                "customization": "cell text color",
                "customizationValue": "red"
              },
              {
                "field": "Synonyms diff",
                "condition": "=",
                "value": "no",
                "customization": "cell text color",
                "customizationValue": "green"
              },
              {
                "field": "Synonyms diff",
                "condition": "=",
                "value": "yes",
                "customization": "cell text color",
                "customizationValue": "red"
              },
              {
                "field": "Definition diff",
                "condition": "=",
                "value": "no",
                "customization": "cell text color",
                "customizationValue": "green"
              },
              {
                "field": "Definition diff",
                "condition": "=",
                "value": "yes",
                "customization": "cell text color",
                "customizationValue": "red"
              }
            ]
          }
        }
      ]
    }
  ],
  "parameters": {},
  "extensions": {
    "active": true,
    "activeReducers": [],
    "advanced-charts": {
      "active": true
    },
    "actions": {
      "active": true
    },
    "styling": {
      "active": true
    },
    "forms": {
      "active": true
    }
  },
  "uuid": "6939741f-43c7-4099-ace0-51e3b1b9820b"
}